#!/bin/csh -f 
# @(#)cvt.tape-disk.cv.sh	5.2 10/27/94
# Charlottesville version.  Uses remote tape on rhesus
set tapehost = rhesus
#		make sure that they can rsh to tapehost
set  username = `whoami`
rsh -l $username $tapehost ls >& /dev/null
if ($status != 0) then
   set username = unipops
   rsh -l $username $tapehost ls >& /dev/null
   if ($status != 0) then
      echo "This will not work from your login."
      echo "See the local unipops guru for help."
      exit(256)
   endif
endif
set rmtcmd = "rsh -l $username $tapehost /bin/csh -f"
#
echo " "
echo "Converts a tape file in IEEE Keep, Modcomp Keep, ASCII, Telescope Tape, or"
echo "PCPOPS format to disk in either IEEE Keep, Modcomp Keep, ASCII, PCPOPS,"
echo "or SDD format. All of the file or only the records specified by the user"
echo "will be converted"
echo " "
echo "NOTE: The tape drive must be attached to" $tapehost
echo " "
#
informat:
echo " "
echo "Enter one of the following to specify the format of the input tape"
echo -n "IEEE, MOD, ASCII, TELE, or PC? "
set informat = $<
set informat = `echo $informat | tr "[a-z]" "[A-Z]"`
if ($informat == "IEEE" || $informat == "MOD" || $informat == "PC") then
	set recl = 5120
else if ($informat == "TELE") then
	set recl = 9600
else if ($informat == "ASCII") then
	set recl = 21680
else
	echo " "
	echo "WARNING: Incorrect entry... Try again"
	goto informat
endif
#
intape:
echo " "
echo -n "Enter device name of input tape drive (e.g., rst0, rst1, rmt0,...): "
set infile = $<
set drv = /dev/$infile
#		on IBM machines, the odd drive number extensions are the
#		non-rewind machines
set ndrv = /dev/$infile.1
set ifstr = "if ( -e $drv ) echo YES"
set EXIST = `echo $ifstr | $rmtcmd` 
if ($status != 0) then
   echo "Problems communicating with $tapehost."
   exit(256)
endif
if ( $EXIST !~ YES ) then
   echo " "
   echo "ERROR: Input drive" $drv "does not exist on $tapehost.  Try again"
   goto intape
endif
#
outformat:
echo " "
echo "Enter one of the following to specify the format of output file"
echo -n "IEEE, MOD, ASCII, SDD, or PC? "
set outformat = $<
set outformat = `echo $outformat | tr "[a-z]" "[A-Z]"`
if ($outformat != "IEEE" && $outformat != "MOD" && $outformat != "PC" && $outformat != "ASCII" && $outformat != "SDD") then
	echo " "
	echo "WARNING: Incorrect entry... Try again"
	goto outformat
endif
#
set cmnd2 = " "
if ($informat != $outformat) then
intype:
   echo " "
   echo "Enter L or C or B if you want line, continuum, or both"
   echo -n "types of scans: "
   set scntype = $<
   if ($scntype == "l" || $scntype == "L") then
	set cmnd2 = "l"
   else if($scntype == "c" || $scntype == "C") then
	if ($informat == "TELE") then
		set cmnd2 = "c p"
	else
		set cmnd2 = "c"
	endif
   else if($scntype == "b" || $scntype == "B") then
	if ($informat == "TELE") then
		set cmnd2 = "p"
	else
		set cmnd2 = " "
	endif
   else
	echo "WARNING: Incorrect entry... Try again"
	goto intype
   endif
endif
#
echo " "
echo "Rewinding input tape"
onintr -
set cmdout = `echo mt -f $drv rewind\; echo \$status | $rmtcmd `
if ($status != 0) then
   echo "Problems communicating with $tapehost."
   exit(256)
endif
if ($cmdout[$#cmdout] != 0) then
   echo "Cannot rewind ${drv} on $tapehost"
   exit(256)
endif
#
echo " "
if ($informat == "MOD" || $informat == "TELE") then
   echo "Reading label on tape"
   if ($informat == "MOD") then
      set labeltape = `echo dd if=$drv bs=512 count=1 | $rmtcmd | grep "MODCOMP USERTAPE" | wc`
      if ($status != 0) then
           echo "Cannot read label on ${drv}"
           exit(256)
      endif
   else if($informat == "TELE") then
      set labeltape = `echo dd if=$drv bs=512 count=1 | $rmtcmd | grep "VOL1ET" | wc`
      if ($status != 0) then
           echo "Cannot read label on ${drv}"
           exit(256)
      endif
   endif
   if ($labeltape[2] == 0) then
      echo " "
      echo "ERROR: Tape is of the wrong format... Try again "
      echo " "
      exit(256)
   endif
   set cmdout = `echo mt -f $ndrv fsf 1\; echo \$status | $rmtcmd`
   if ($status != 0) then
      echo "Problems communicating with $tapehost."
      exit(256)
   endif
   if ($cmdout[$#cmdout] != 0) then
      echo "Cannot position tape on ${drv}"
      exit(256)
   endif
#
else
   onintr
   echo -n "How many files do you want to skip on the input tape? "
   set nfiles = $<
   if ($nfiles > 0) then
	   echo " "
	   echo "Skiping" $nfiles "files"
           onintr -
	   set cmdout = `echo mt -f $ndrv fsf $nfiles\; echo \$status | $rmtcmd`
           onintr
     	   if ($cmdout[$#cmdout]) then
              echo "Cannot position tape on ${drv}"
              exit(256)
     	   endif
   endif	   	
endif
#
set position = 0
#
newfile:
echo " "
echo -n "Enter output file name: "
set outfile = $<
#
unset overwrite
if (-e $outfile) then
	echo " "
	echo "WARNING: Output file" $outfile "exists..."
	echo "Do you want to overwrite output file or append to it?"
	echo -n "Enter o for overwrite, anything else to append: "
	set answr = $<
	if ($answr == "o" || $answr == "O") set overwrite
else
	set overwrite
endif
#
inrecords:
echo " "
echo -n "Enter first tape record number to convert (1 for first record in file): "
set first = $<
echo -n "Enter last record number to convert (0 for last record in file): "
set last = $<
if ($first <= 0) set first = 1
if ($last <= 0) set last = 9999999
if ($last < $first) then
	echo " "
	echo -n "WARNING: First record number must be less than or equal to last"
	echo ".... Try agin"
	goto inrecords
endif
#
onintr -
@ count=1 + $last - $first 
@ skip=$first - 1
@ numskip=$skip - $position 
#
if ($numskip > 0) then
	echo " "
	echo "Bypassing" $numskip "records"
	set cmdout = `echo mt -f $ndrv fsr $numskip\; echo \$status | $rmtcmd`
        if ($status != 0) then
           echo "Problems communicating with $tapehost."
           exit(256)
        endif
     	if ($cmdout[$#cmdout] != 0) then
              echo "Cannot position tape on ${drv}"
              exit(256)
     	endif
else if ($numskip < 0) then
	echo " "
	echo -n "WARNING: Cannot backspace records... "
	echo -n "Do you want to quit (Y/N)? "
	set answr = $<
	if ($answr == "y" || $answr == "Y") then
	   echo " "
	   echo "Rewinding and exiting"
	   echo mt -f $drv rewind\; echo \$status | $rmtcmd
	   echo " "
	   exit(0)
	else
	   goto inrecords 
	endif
else if ($first >= 2) then
	echo "Must re-position tape -- Please be patient"
	set cmdout = `echo mt -f $ndrv bsr 1\;echo \$status | $rmtcmd`
        if ($status != 0) then
           echo "Problems communicating with $tapehost."
           exit(256)
        endif
     	if ($cmdout[$#cmdout] != 0) then
              echo "Cannot position tape on ${drv} on $tapehost."
              exit(256)
     	endif
	set cmdout = `echo mt -f $ndrv fsr 1\;echo \$status | $rmtcmd`
        if ($status != 0) then
           echo "Problems communicating with $tapehost."
           exit(256)
        endif
     	if ($cmdout[$#cmdout] != 0) then
              echo "Cannot position tape on ${drv} on $tapehost."
              exit(256)
     	endif
# Backspace and skip the last read record -- hopefully bypasses a problem
# with SCSI tape drive
endif
#
echo " "
if ($?overwrite) then
   onintr
   if (-e $outfile) \rm $outfile
   if ($outformat == "SDD") then
	echo " "
        echo "How many output scans do you want the SDD file "    
        echo -n "to hold (Default = 1024) ? " 
        set nscans = $<
	if ($nscans == "") set nscans = 1024
        echo "Creating" $outfile
	makeempty.exe $outfile $nscans
	if ($status != 0) then
	   echo "Cannot create ${outfile}"
	   exit(256)
	endif
   else 
      echo "Creating" $outfile
      touch $outfile
      if ($status != 0) then
	   echo "Cannot create ${outfile}"
      endif
   endif
   onintr -
else
   if ($outformat == "SDD") then
      set bb = `bootstrap $outfile 512 LONG`
      if ( $bb[10] != 1 ) then
         set bb = `bootstrap $outfile 512 SHORT`
         set typesdd = $bs[8]
      else
         set typesdd = $bs[9]
      endif
      if ( $typesdd != 0 ) then
	  echo "Output SDD file is in RECORDS format... Terminating"
	  exit(256)
      endif
   endif
#
   echo "Appending to" $outfile
endif
touch $outfile
if ($status != 0) then
   echo "Cannot modify ${outfile}"
   exit(256)
endif
#
echo "Converting data."
onintr -
set DD = "dd if=$ndrv bs=$recl count=$count"
switch ($informat)
case TELE:
   set TOIEEE = "tele2ieee.exe $cmnd2"
   breaksw
case PC:
   set TOIEEE = "pcieee.exe $cmnd2"
   breaksw
case MOD:
   set TOIEEE = "keep2ieee.exe $cmnd2"
   breaksw
case ASCII:
   set TOIEEE = "ascii2ieee.exe $cmnd2"
   if ($outformat != "ASCII") then
      set DD = "dd if=$ndrv ibs=$recl cbs=80 conv=unblock count=$count"
   endif
   breaksw
case IEEE:
   set TOIEEE = ""
   breaksw
default:
   echo "Invalid input format $informat.  This error should NOT happen."
   echo "Contact a UniPOPS guru."
   exit(256)
   breaksw
endsw
switch ($outformat)
case PC:
   set FROMIEEE = "pcieee.exe"
   breaksw
case MOD:
   set FROMIEEE = "ieee2keep.exe"
   breaksw
case ASCII:
   set FROMIEEE = "ieee2ascii.exe"
   breaksw
case SDD:
   set FROMIEEE = "ieee2sdd.exe"
   breaksw
case IEEE:
   set FROMIEEE = ""
   breaksw
default:
   echo "Invalid output format $outformat.  This error should NOT happen."
   echo "Contact a UniPOPS guru."
   exit(256)
   breaksw
endsw
#
if ($informat == $outformat) then
   if ($outformat == "ASCII") then
      echo $DD | $rmtcmd | dd obs=21680 >> $outfile
      if ($status != 0) goto cnverr
   else
      echo $DD | $rmtcmd >> $outfile
      if ($status != 0) goto cnverr
   endif
else
   if ($TOIEEE == "") then
      if ($outformat == "ASCII") then
         echo $DD | $rmtcmd | $FROMIEEE | dd obs=21680 cbs=80 conv=block \
               >> $outfile
         if ($status != 0) goto cnverr
      else
         echo $DD | $rmtcmd | $FROMIEEE >> $outfile
         if ($status != 0) goto cnverr
      endif
   else if ($FROMIEEE == "") then
      echo $DD | $rmtcmd | $TOIEEE >> $outfile
      if ($status != 0) goto cnverr
   else
      if ($outformat == "ASCII") then
         echo $DD | $rmtcmd | $TOIEEE | $FROMIEEE | \
		dd obs=21680 cbs=80 conv=block >> $outfile
         if ($status != 0) goto cnverr
      else
         echo $DD | $rmtcmd | $TOIEEE | $FROMIEEE >> $outfile
         if ($status != 0) goto cnverr
      endif
   endif
endif
#
unset overwrite
onintr
#
if ($outformat == "SDD") then
   echo "Indexing output SDD file."
   makeindex.exe $outfile > /dev/null
   if ($status != 0) then
      echo "Some problem encountered in recreating index for ${outfile}"
      exit(256)
   endif
endif
#
more:
echo " "
echo -n "Do you want to convert more records (Y/N)?: "
set answr = $<
if ($answr == "y" || $answr == "Y") then
	set position = $last
	goto newfile
else if($answr == "n" || $answr == "N") then
	echo " "
	echo "Rewinding and exiting"
        onintr -
 	echo mt -f $drv rewind | $rmtcmd
	echo " "
	exit(0)
else
	echo " "
	echo "WARNING: Incorect entry... Try again"
	goto more
endif
#
cnverr:
   echo "Some problem encountered in converting data."
   exit(256)
